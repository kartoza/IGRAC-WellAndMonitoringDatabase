# Generated by Django 2.2.12 on 2020-07-02 08:10

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('gwml2', '0004_casing_filtration_screen_wellconstruction'),
    ]

    operations = [
        migrations.CreateModel(
            name='BholeStartPointTypeTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BoreholeDrillingMethodTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BoreholeInclinationTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CIAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery_point', models.TextField(blank=True, null=True, verbose_name='DeliveryPoint')),
                ('city', models.TextField(blank=True, null=True, verbose_name='City')),
                ('administrative_area', models.TextField(blank=True, null=True, verbose_name='AdministrativeArea')),
                ('postal_code', models.TextField(blank=True, null=True, verbose_name='PostalCode')),
                ('country', models.TextField(blank=True, null=True, verbose_name='Country')),
                ('electronic_mail_address', models.TextField(blank=True, null=True, verbose_name='ElectronicMailAddress')),
            ],
        ),
        migrations.CreateModel(
            name='CIContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hours_of_service', models.TextField(blank=True, null=True, verbose_name='HoursOfService')),
                ('contact_instruction', models.TextField(blank=True, null=True, verbose_name='ContactInstruction')),
                ('address', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.CIAddress', verbose_name='Address')),
            ],
        ),
        migrations.CreateModel(
            name='CIOnlineFunctionTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CIRoleTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CITelephone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voice', models.TextField(blank=True, null=True, verbose_name='Voice')),
                ('facsimile', models.TextField(blank=True, null=True, verbose_name='Facsimile')),
            ],
        ),
        migrations.CreateModel(
            name='GMEnvelope',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upper_corner', django.contrib.gis.db.models.fields.PointField(blank=True, dim=3, help_text='A coordinate consisting of all maximal values of the ordinates of all points within the GM_Envelope.', null=True, srid=4326, verbose_name='UpperCorner')),
                ('lower_corner', django.contrib.gis.db.models.fields.PointField(blank=True, dim=3, help_text='A coordinate consisting of all minimal values of the ordinates of all points within the GM_Envelope.', null=True, srid=4326, verbose_name='LowerCorner')),
            ],
        ),
        migrations.AddField(
            model_name='borehole',
            name='name',
            field=models.TextField(blank=True, null=True, verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='omprocess',
            name='name',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.CreateModel(
            name='CIResponsibleParty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('individual_name', models.TextField(blank=True, null=True, verbose_name='IndividualName')),
                ('organisation_name', models.TextField(blank=True, null=True, verbose_name='OrganisationName')),
                ('position_name', models.TextField(blank=True, null=True, verbose_name='PositionName')),
                ('contact_info', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.CIContact', verbose_name='ContactInfo')),
                ('role', models.ManyToManyField(blank=True, null=True, to='gwml2.CIRoleTerm', verbose_name='Role')),
            ],
        ),
        migrations.CreateModel(
            name='CIOnlineResource',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('linkage', models.TextField(blank=True, null=True, verbose_name='Linkage')),
                ('protocol', models.TextField(blank=True, null=True, verbose_name='Protocol')),
                ('application_profile', models.TextField(blank=True, null=True, verbose_name='ApplicationProfile')),
                ('name', models.TextField(blank=True, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('function', models.ManyToManyField(blank=True, null=True, to='gwml2.CIOnlineFunctionTerm', verbose_name='Function')),
            ],
        ),
        migrations.AddField(
            model_name='cicontact',
            name='online_resource',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.CIOnlineResource', verbose_name='OnlineResource'),
        ),
        migrations.AddField(
            model_name='cicontact',
            name='phone',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.CITelephone', verbose_name='Phone'),
        ),
        migrations.AddField(
            model_name='borehole',
            name='bhole_core_interval',
            field=models.ForeignKey(blank=True, help_text='The geometries for the intervals from which coreis extracted along the borehole.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.GMEnvelope', verbose_name='bholeCoreInterval'),
        ),
        migrations.AddField(
            model_name='borehole',
            name='bhole_driller',
            field=models.ForeignKey(blank=True, help_text='The organisation responsible for drilling the borehole (as opposed to commissioning the borehole).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bhole_driller', to='gwml2.CIResponsibleParty', verbose_name='bholeDriller'),
        ),
        migrations.AddField(
            model_name='borehole',
            name='bhole_drilling_method',
            field=models.ManyToManyField(blank=True, help_text='Method of drilling.', null=True, to='gwml2.BoreholeDrillingMethodTerm', verbose_name='bholeDrillingMethod'),
        ),
        migrations.AddField(
            model_name='borehole',
            name='bhole_inclination_type',
            field=models.ForeignKey(blank=True, help_text='Type of borehole inclination, e.g. vertical or horizontal.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.BoreholeInclinationTerm', verbose_name='bholeInclinationType'),
        ),
        migrations.AddField(
            model_name='borehole',
            name='bhole_material_custodian',
            field=models.ManyToManyField(blank=True, help_text='The custodian of the drill core or samples recovered from the borehole.', null=True, related_name='bhole_material_custodian', to='gwml2.CIResponsibleParty', verbose_name='bholeMaterialCustodian'),
        ),
        migrations.AddField(
            model_name='borehole',
            name='bhole_operator',
            field=models.ForeignKey(blank=True, help_text='Organisation responsible for commissioning theborehole (as opposed to drilling the borehole).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bhole_operator', to='gwml2.CIResponsibleParty', verbose_name='bholeOperator'),
        ),
        migrations.AddField(
            model_name='borehole',
            name='bhole_start_point',
            field=models.ForeignKey(blank=True, help_text='Describes the location of the start of theborehole, e.g. ground surface.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.BholeStartPointTypeTerm', verbose_name='bholeStartPoint'),
        ),
    ]
