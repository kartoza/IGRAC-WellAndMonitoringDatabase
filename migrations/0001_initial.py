# Generated by Django 2.2.12 on 2020-07-01 08:53

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Borehole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bhole_date_of_drilling', models.DateField(help_text='Date of drilling.', null=True, verbose_name='bholeDateOfDrilling')),
            ],
        ),
        migrations.CreateModel(
            name='CasingCoatingTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CasingFormTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CasingMaterialTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConstructionComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='FiltrationMaterialTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GWLicence',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gw_licence_id', models.CharField(help_text='Licence ID, e.g. a number.', max_length=150, verbose_name='gwLicenceID')),
                ('gw_purpose', models.TextField(help_text='Role of the licence.', verbose_name='gwPurpose')),
                ('gw_associated_gw_volume', models.FloatField(blank=True, help_text='Fluid volume associated with the licence.', null=True, verbose_name='gwAssociatedGWVolume')),
                ('gw_time_period', models.DateTimeField(blank=True, help_text='The period of time for which the licence is valid.', null=True, verbose_name='gwTimePeriod')),
            ],
        ),
        migrations.CreateModel(
            name='Quantity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.TextField(blank=True, null=True)),
                ('value', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SealingMaterialTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SealingTypeTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='WellStatusTypeTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SealingComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sealing_material', models.ForeignKey(blank=True, help_text='Material used in the sealing component of a water well. E.g. formation packer, welded ring, shale trap, drive shoe, driven casing, etc.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.SealingMaterialTerm', verbose_name='sealingMaterial')),
                ('sealing_type', models.ForeignKey(blank=True, help_text='Type of sealing. E.g. annular sealing, plugging, etc.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.SealingTypeTerm', verbose_name='sealingType')),
            ],
        ),
        migrations.CreateModel(
            name='GWWell',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gw_well_name', models.TextField(help_text='Name or ID of the well.', verbose_name='gwWellName')),
                ('gw_well_location', django.contrib.gis.db.models.fields.PointField(help_text='Surface location of the well.', srid=4326, verbose_name='gwWellLocation')),
                ('gw_well_contribution_zone', django.contrib.gis.db.models.fields.GeometryField(blank=True, help_text='The area or volume surrounding a pumping wellor other discharge site that encompasses all areasand features that supply groundwater to the wellor discharge site.', null=True, srid=4326, verbose_name='gwWellContributionZone')),
                ('gw_well_total_length', models.FloatField(blank=True, help_text='Total length of the well from reference elevation.', null=True, verbose_name='gwWellTotalLength')),
                ('gw_well_constructed_depth', models.OneToOneField(blank=True, help_text='Constructed depth of the well.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gw_well_constructed_depth', to='gwml2.Quantity', verbose_name='gwWellConstructedDepth')),
                ('gw_well_construction', models.ForeignKey(blank=True, help_text='Construction details for a well.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Borehole', verbose_name='gwWellConstruction')),
                ('gw_well_licence', models.OneToOneField(blank=True, help_text='Licence relating to the drilling of the well or to the extraction of groundwater.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.GWLicence', verbose_name='gwWellLicence')),
                ('gw_well_static_water_depth', models.OneToOneField(blank=True, help_text='Depth of the fluid body (e.g. piezometric level).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gw_well_static_water_depth', to='gwml2.Quantity', verbose_name='gwWellStaticWaterDepth')),
                ('gw_well_status', models.ForeignKey(blank=True, help_text='Status of the well, Can be new, unfinished, reconditioned, deepened, not in use, standby,unknown, abandoned dry, abandonedinsufficient, abandoned quality. (gwml1)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.WellStatusTypeTerm', verbose_name='gwWellStatus')),
            ],
        ),
        migrations.CreateModel(
            name='GWGeologyLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phenomenon_time', models.DateTimeField(blank=True, null=True, verbose_name='phenomenonTime')),
                ('result_time', models.DateTimeField(blank=True, null=True, verbose_name='resultTime')),
                ('parameter', models.TextField(blank=True, null=True)),
                ('gw_level', models.FloatField(blank=True, null=True, verbose_name='gw_level')),
                ('reference', models.TextField(blank=True, null=True, verbose_name='reference')),
                ('end_depth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='endDepth', to='gwml2.Quantity', verbose_name='endDepth')),
                ('gw_well', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.GWWell', verbose_name='gwWell')),
                ('start_depth', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='startDepth', to='gwml2.Quantity', verbose_name='startDepth')),
            ],
        ),
        migrations.CreateModel(
            name='FiltrationComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('construction_component', models.ForeignKey(blank=True, help_text='A filtration part is a type of construction component', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.ConstructionComponent', verbose_name='ConstructionComponent')),
                ('filter_grain_size', models.OneToOneField(blank=True, help_text='Size of the particles of the filtration material.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Quantity', verbose_name='filterGrainSize')),
                ('filter_material', models.ForeignKey(blank=True, help_text='Material used in the filtration device. E.g. gravel,pit run, silica sand, washed sand, crushed rock, etc.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.FiltrationMaterialTerm', verbose_name='FiltrationMaterialTerm')),
            ],
        ),
        migrations.AddField(
            model_name='constructioncomponent',
            name='from_component',
            field=models.OneToOneField(blank=True, db_column='from', help_text='Position of the top (nearest to the borehole start) of the component.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='construction_component_from', to='gwml2.Quantity'),
        ),
        migrations.AddField(
            model_name='constructioncomponent',
            name='to_component',
            field=models.OneToOneField(blank=True, db_column='to', help_text='Position of the bottom (farthest to the borehole start) of the component.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='construction_component_to', to='gwml2.Quantity'),
        ),
        migrations.CreateModel(
            name='CasingComponent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('casing_coating', models.ForeignKey(blank=True, help_text='Coating applied to the casing. E.g. galvanized,stainless, mild, low carbon, copper bearing,black, etc.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casing_coating', to='gwml2.CasingMaterialTerm', verbose_name='casingCoating')),
                ('casing_external_diameter', models.OneToOneField(blank=True, help_text='External diameter of the casing.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casing_external_diameter', to='gwml2.Quantity', verbose_name='casingExternalDiameter')),
                ('casing_form', models.ForeignKey(blank=True, help_text='Form of material used in the casing. E.g.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casing_form', to='gwml2.CasingFormTerm', verbose_name='casingForm')),
                ('casing_internal_diameter', models.OneToOneField(blank=True, help_text='Internal diameter of the casing.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casing_internal_diameter', to='gwml2.Quantity', verbose_name='casingInternalDiameter')),
                ('casing_material', models.ForeignKey(blank=True, help_text='Material in which the casing is made. E.g. metal, steel, iron, concrete, wood, brick, plastic, teflon,PVC, ABS, fibreglass, etc.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casing_material', to='gwml2.CasingMaterialTerm', verbose_name='casingMaterial')),
                ('casing_wall_thickness', models.OneToOneField(blank=True, help_text='Thickness of the wall of the casing.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='casing_wall_thickness', to='gwml2.Quantity', verbose_name='casingWallThickness')),
            ],
        ),
        migrations.AddField(
            model_name='borehole',
            name='bhole_nominal_diameter',
            field=models.OneToOneField(blank=True, help_text='Diameter of the borehole.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Quantity', verbose_name='bholeNominalDiameter'),
        ),
    ]
