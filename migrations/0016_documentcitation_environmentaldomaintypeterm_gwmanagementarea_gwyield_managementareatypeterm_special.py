# Generated by Django 2.2.12 on 2020-07-03 07:11

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('gwml2', '0015_auto_20200703_0640'),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentCitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('date', models.DateField(blank=True, null=True)),
                ('link', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='EnvironmentalDomainTypeTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ManagementAreaTypeTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpecialisedZoneAreaTypeTerm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='YieldType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GWYield',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gw_yield', models.ForeignKey(blank=True, help_text='Measurement of the yield in units of volume per unit of time.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.Quantity', verbose_name='gwYield')),
                ('gw_yield_type', models.ForeignKey(blank=True, help_text='Type of aquifer yields: e.g. specific yield, safe yield, etc.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.YieldType', verbose_name='gwYieldType')),
            ],
        ),
        migrations.CreateModel(
            name='GWManagementArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gw_area_name', models.TextField(help_text='Name of the management area.', verbose_name='gwAreaName')),
                ('gw_area_description', models.TextField(help_text='General description of the management area.', verbose_name='gwAreaDescription')),
                ('gw_area_shape', django.contrib.gis.db.models.fields.GeometryField(help_text='Geometric shape and position of management area.', srid=4326, verbose_name='gwAreaShape')),
                ('documentation', models.ForeignKey(blank=True, help_text='Relates legislative and reference documentation to a management area.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.DocumentCitation')),
                ('gw_area_body', models.ManyToManyField(help_text='Relates a management area to the fluid bodies contained within thearea. As with units, the spatial boundaries of management areas donot necessarily coincide with the spatial boundaries of fluid bodies.', to='gwml2.GWFluidBody', verbose_name='gwAreaBody')),
                ('gw_area_competent_authority', models.ManyToManyField(blank=True, help_text='Description of the organization(s) responsible formanaging, restricting or regulating measures oractivities within the management area.', null=True, to='gwml2.CIResponsibleParty', verbose_name='gwAreaCompetentAuthority')),
                ('gw_area_designation_period', models.ForeignKey(blank=True, help_text='Time period specifying when the management area was legally designated or became effective in the real world.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.TMPeriod', verbose_name='gwAreaDesignationPeriod')),
                ('gw_area_environmental_domain', models.ForeignKey(blank=True, help_text='Classification of the environment domain(s) for which, through the establishment of the management area, certain environmental objectives are to be reached.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.EnvironmentalDomainTypeTerm', verbose_name='gwAreaEnvironmentalDomain')),
                ('gw_area_specialised_area_type', models.ForeignKey(blank=True, help_text='Additional classification value which furtherspecialises the gwAreaType.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.SpecialisedZoneAreaTypeTerm', verbose_name='gwAreaSpecialisedAreaType')),
                ('gw_area_type', models.ForeignKey(blank=True, help_text='General classification of the management area(e.g. restricted use zone, irrigation area,consumption area, etc.)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.ManagementAreaTypeTerm', verbose_name='gwAreaType')),
                ('gw_area_water_budget', models.ManyToManyField(help_text='Water budget associated with the management area.', to='gwml2.GWWaterBudget', verbose_name='gwAreaWaterBudget')),
                ('gw_area_yield', models.ForeignKey(blank=True, help_text='Yield associated with the management area.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.GWYield', verbose_name='gwAreaYield')),
                ('gw_managed_unit', models.ManyToManyField(help_text='Relates a management area to the hydrogeological units contained within it.Because the spatial boundaries of management areas can be determined by human concerns, e.g. regulatory, these boundaries do not necessarily align with the spatial boundaries of units, which are determined by physical criteria.', to='gwml2.GWHydrogeoUnit', verbose_name='gwManagedUnit')),
                ('related_management_area', models.ForeignKey(blank=True, help_text='Relates a management area part to a management area whole.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='gwml2.GWManagementArea', verbose_name='relatedManagementArea')),
            ],
        ),
    ]
